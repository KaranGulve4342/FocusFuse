/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/tags/[tag]",{

/***/ "./pages/tags/[tag].tsx":
/*!******************************!*\
  !*** ./pages/tags/[tag].tsx ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts(" // export async function getStaticPaths() {\n //   const tags = await getAllTags(allBlogs)\n //   return {\n //     paths: Object.keys(tags).map((tag) => ({\n //       params: {\n //         tag,\n //       },\n //     })),\n //     fallback: false,\n //   }\n // }\n // export const getStaticProps = async (context) => {\n //   const tag = context.params.tag as string\n //   const filteredPosts = allCoreContent(\n //     allBlogs.filter(\n //       (post) => post.draft !== true && post.tags.map((t) => kebabCase(t)).includes(tag)\n //     )\n //   )\n //   return { props: { posts: filteredPosts, tag } }\n // }\n // export default function Tag({ posts, tag }: InferGetStaticPropsType<typeof getStaticProps>) {\n //   // Capitalize first letter and convert space to dash\n //   const title = tag[0].toUpperCase() + tag.split(' ').join('-').slice(1)\n //   return (\n //     <>\n //       <TagSEO\n //         title={`${tag} - ${siteMetadata.title}`}\n //         description={`${tag} tags - ${siteMetadata.author}`}\n //       />\n //       <ListLayout posts={posts} title={title} />\n //     </>\n //   )\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy90YWdzL1t0YWddLnRzeC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxDQVFBLDJDQUEyQztDQUMzQyw0Q0FBNEM7Q0FFNUMsYUFBYTtDQUNiLCtDQUErQztDQUMvQyxrQkFBa0I7Q0FDbEIsZUFBZTtDQUNmLFdBQVc7Q0FDWCxXQUFXO0NBQ1gsdUJBQXVCO0NBQ3ZCLE1BQU07Q0FDTixJQUFJO0NBRUoscURBQXFEO0NBQ3JELDZDQUE2QztDQUM3QywwQ0FBMEM7Q0FDMUMsdUJBQXVCO0NBQ3ZCLDBGQUEwRjtDQUMxRixRQUFRO0NBQ1IsTUFBTTtDQUVOLG9EQUFvRDtDQUNwRCxJQUFJO0NBRUosZ0dBQWdHO0NBQ2hHLHlEQUF5RDtDQUN6RCwyRUFBMkU7Q0FDM0UsYUFBYTtDQUNiLFNBQVM7Q0FDVCxnQkFBZ0I7Q0FDaEIsbURBQW1EO0NBQ25ELCtEQUErRDtDQUMvRCxXQUFXO0NBQ1gsbURBQW1EO0NBQ25ELFVBQVU7Q0FDVixNQUFNO0NBQ04sSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy90YWdzL1t0YWddLnRzeD9iODMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhZ1NFTyB9IGZyb20gJ0AvY29tcG9uZW50cy9TRU8nXG5pbXBvcnQgc2l0ZU1ldGFkYXRhIGZyb20gJ0AvZGF0YS9zaXRlTWV0YWRhdGEnXG5pbXBvcnQgTGlzdExheW91dCBmcm9tICdAL2xheW91dHMvTGlzdExheW91dCdcbmltcG9ydCB7IGtlYmFiQ2FzZSB9IGZyb20gJ3BsaW55L3V0aWxzL2tlYmFiQ2FzZSdcbmltcG9ydCB7IGdldEFsbFRhZ3MsIGFsbENvcmVDb250ZW50IH0gZnJvbSAncGxpbnkvdXRpbHMvY29udGVudGxheWVyJ1xuaW1wb3J0IHsgSW5mZXJHZXRTdGF0aWNQcm9wc1R5cGUgfSBmcm9tICduZXh0J1xuaW1wb3J0IHsgYWxsQmxvZ3MgfSBmcm9tICdjb250ZW50bGF5ZXIvZ2VuZXJhdGVkJ1xuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdGljUGF0aHMoKSB7XG4vLyAgIGNvbnN0IHRhZ3MgPSBhd2FpdCBnZXRBbGxUYWdzKGFsbEJsb2dzKVxuXG4vLyAgIHJldHVybiB7XG4vLyAgICAgcGF0aHM6IE9iamVjdC5rZXlzKHRhZ3MpLm1hcCgodGFnKSA9PiAoe1xuLy8gICAgICAgcGFyYW1zOiB7XG4vLyAgICAgICAgIHRhZyxcbi8vICAgICAgIH0sXG4vLyAgICAgfSkpLFxuLy8gICAgIGZhbGxiYWNrOiBmYWxzZSxcbi8vICAgfVxuLy8gfVxuXG4vLyBleHBvcnQgY29uc3QgZ2V0U3RhdGljUHJvcHMgPSBhc3luYyAoY29udGV4dCkgPT4ge1xuLy8gICBjb25zdCB0YWcgPSBjb250ZXh0LnBhcmFtcy50YWcgYXMgc3RyaW5nXG4vLyAgIGNvbnN0IGZpbHRlcmVkUG9zdHMgPSBhbGxDb3JlQ29udGVudChcbi8vICAgICBhbGxCbG9ncy5maWx0ZXIoXG4vLyAgICAgICAocG9zdCkgPT4gcG9zdC5kcmFmdCAhPT0gdHJ1ZSAmJiBwb3N0LnRhZ3MubWFwKCh0KSA9PiBrZWJhYkNhc2UodCkpLmluY2x1ZGVzKHRhZylcbi8vICAgICApXG4vLyAgIClcblxuLy8gICByZXR1cm4geyBwcm9wczogeyBwb3N0czogZmlsdGVyZWRQb3N0cywgdGFnIH0gfVxuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUYWcoeyBwb3N0cywgdGFnIH06IEluZmVyR2V0U3RhdGljUHJvcHNUeXBlPHR5cGVvZiBnZXRTdGF0aWNQcm9wcz4pIHtcbi8vICAgLy8gQ2FwaXRhbGl6ZSBmaXJzdCBsZXR0ZXIgYW5kIGNvbnZlcnQgc3BhY2UgdG8gZGFzaFxuLy8gICBjb25zdCB0aXRsZSA9IHRhZ1swXS50b1VwcGVyQ2FzZSgpICsgdGFnLnNwbGl0KCcgJykuam9pbignLScpLnNsaWNlKDEpXG4vLyAgIHJldHVybiAoXG4vLyAgICAgPD5cbi8vICAgICAgIDxUYWdTRU9cbi8vICAgICAgICAgdGl0bGU9e2Ake3RhZ30gLSAke3NpdGVNZXRhZGF0YS50aXRsZX1gfVxuLy8gICAgICAgICBkZXNjcmlwdGlvbj17YCR7dGFnfSB0YWdzIC0gJHtzaXRlTWV0YWRhdGEuYXV0aG9yfWB9XG4vLyAgICAgICAvPlxuLy8gICAgICAgPExpc3RMYXlvdXQgcG9zdHM9e3Bvc3RzfSB0aXRsZT17dGl0bGV9IC8+XG4vLyAgICAgPC8+XG4vLyAgIClcbi8vIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/tags/[tag].tsx\n"));

/***/ })

});